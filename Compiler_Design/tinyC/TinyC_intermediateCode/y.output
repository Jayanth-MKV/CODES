Terminals unused in grammar

    UNARY
    PRINTALL


Rules useless in parser due to conflicts

   32 assign_stmt_list: assign_stmt_list assign_stmt


State 40 conflicts: 5 reduce/reduce
State 59 conflicts: 1 shift/reduce
State 60 conflicts: 1 shift/reduce
State 61 conflicts: 2 shift/reduce
State 86 conflicts: 2 shift/reduce
State 87 conflicts: 2 shift/reduce
State 90 conflicts: 5 shift/reduce


Grammar

    0 $accept: lines $end

    1 int: INTEGER

    2 double: DOUB

    3 void: VOID

    4 lines: program
    5      | END

    6 returnty: int
    7         | void
    8         | double

    9 program: returnty ID '(' ')' '{' body return_main '}'

   10 body: local_decl_optional stmt_list

   11 stmt_list: assign_stmt_list
   12          | print_stmt_list
   13          | if_else_stmt_list
   14          | assign_stmt_list stmt_list
   15          | print_stmt_list stmt_list

   16 print_stmt_list: PRINT id ';'

   17 if_else_stmt_list: IF '(' logical_expr ')' '{' stmt_list '}' ELSE '{' stmt_list '}'
   18                  | IF '(' logical_expr ')' '{' stmt_list '}'

   19 logical_expr: logical_expr AAND logical_expr
   20             | logical_expr OOR logical_expr
   21             | NNOT logical_expr
   22             | relexpr

   23 relexpr: expr relop expr

   24 relop: LT
   25      | GT
   26      | LE
   27      | GE
   28      | NE
   29      | EQ

   30 return_main: RETURN NUMBER ';'

   31 assign_stmt_list: assign_stmt
   32                 | assign_stmt_list assign_stmt

   33 assign_stmt: id '=' id ';'
   34            | id '=' constant ';'
   35            | id '=' expr ';'

   36 expr: expr arithop expr
   37     | id
   38     | constant

   39 arithop: ADDITION
   40        | SUBTRACT
   41        | MUL
   42        | DIVISION
   43        | MODULUS

   44 local_decl_optional: vardecl local_decl_optional
   45                    | vardecl

   46 vardecl: returnty ID ';'

   47 constant: int_const
   48         | double_const

   49 id: ID

   50 double_const: '+' DOUB
   51             | '-' DOUB
   52             | DOUB

   53 digit: NUMBER

   54 int_const: '+' digits
   55          | '-' digits
   56          | digits

   57 digits: digit digits
   58       | digit


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 9 17 18
    ')' (41) 9 17 18
    '+' (43) 50 54
    '-' (45) 51 55
    ';' (59) 16 30 33 34 35 46
    '=' (61) 33 34 35
    '{' (123) 9 17 18
    '}' (125) 9 17 18
    error (256)
    NUMBER <ival> (258) 30 53
    ID <cval> (259) 9 46 49
    END (260) 5
    RETURN (261) 30
    VOID (262) 3
    IF (263) 17 18
    ELSE (264) 17
    UNARY (265)
    LE (266) 26
    GE (267) 27
    EQ (268) 29
    NE (269) 28
    GT (270) 25
    LT (271) 24
    AAND (272) 19
    OOR (273) 20
    NNOT (274) 21
    SUBTRACT <ch> (275) 40
    MUL <ch> (276) 41
    DIVISION <ch> (277) 42
    MODULUS <ch> (278) 43
    ADDITION <ch> (279) 39
    DOUB <dval> (280) 2 50 51 52
    PRINT (281) 16
    INTEGER (282) 1
    PRINTALL (283)


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    int <dt> (38)
        on left: 1
        on right: 6
    double <dt> (39)
        on left: 2
        on right: 8
    void <dt> (40)
        on left: 3
        on right: 7
    lines (41)
        on left: 4 5
        on right: 0
    returnty <dt> (42)
        on left: 6 7 8
        on right: 9 46
    program <pro> (43)
        on left: 9
        on right: 4
    body <func> (44)
        on left: 10
        on right: 9
    stmt_list <la> (45)
        on left: 11 12 13 14 15
        on right: 10 14 15 17 18
    print_stmt_list <la> (46)
        on left: 16
        on right: 12 15
    if_else_stmt_list <la> (47)
        on left: 17 18
        on right: 13
    logical_expr (48)
        on left: 19 20 21 22
        on right: 17 18 19 20 21
    relexpr (49)
        on left: 23
        on right: 22
    relop (50)
        on left: 24 25 26 27 28 29
        on right: 23
    return_main <a> (51)
        on left: 30
        on right: 9
    assign_stmt_list <la> (52)
        on left: 31 32
        on right: 11 14 32
    assign_stmt <a> (53)
        on left: 33 34 35
        on right: 31 32
    expr <a> (54)
        on left: 36 37 38
        on right: 23 35 36
    arithop <ch> (55)
        on left: 39 40 41 42 43
        on right: 36
    local_decl_optional <la> (56)
        on left: 44 45
        on right: 10 44
    vardecl <ste> (57)
        on left: 46
        on right: 44 45
    constant <a> (58)
        on left: 47 48
        on right: 34 38
    id <cval> (59)
        on left: 49
        on right: 16 33 34 35 37
    double_const <dval> (60)
        on left: 50 51 52
        on right: 48
    digit <ival> (61)
        on left: 53
        on right: 57 58
    int_const <ival> (62)
        on left: 54 55 56
        on right: 47
    digits <ival> (63)
        on left: 57 58
        on right: 54 55 56 57


State 0

    0 $accept: . lines $end

    END      shift, and go to state 1
    VOID     shift, and go to state 2
    DOUB     shift, and go to state 3
    INTEGER  shift, and go to state 4

    int       go to state 5
    double    go to state 6
    void      go to state 7
    lines     go to state 8
    returnty  go to state 9
    program   go to state 10


State 1

    5 lines: END .

    $default  reduce using rule 5 (lines)


State 2

    3 void: VOID .

    $default  reduce using rule 3 (void)


State 3

    2 double: DOUB .

    $default  reduce using rule 2 (double)


State 4

    1 int: INTEGER .

    $default  reduce using rule 1 (int)


State 5

    6 returnty: int .

    $default  reduce using rule 6 (returnty)


State 6

    8 returnty: double .

    $default  reduce using rule 8 (returnty)


State 7

    7 returnty: void .

    $default  reduce using rule 7 (returnty)


State 8

    0 $accept: lines . $end

    $end  shift, and go to state 11


State 9

    9 program: returnty . ID '(' ')' '{' body return_main '}'

    ID  shift, and go to state 12


State 10

    4 lines: program .

    $default  reduce using rule 4 (lines)


State 11

    0 $accept: lines $end .

    $default  accept


State 12

    9 program: returnty ID . '(' ')' '{' body return_main '}'

    '('  shift, and go to state 13


State 13

    9 program: returnty ID '(' . ')' '{' body return_main '}'

    ')'  shift, and go to state 14


State 14

    9 program: returnty ID '(' ')' . '{' body return_main '}'

    '{'  shift, and go to state 15


State 15

    9 program: returnty ID '(' ')' '{' . body return_main '}'

    VOID     shift, and go to state 2
    DOUB     shift, and go to state 3
    INTEGER  shift, and go to state 4

    int                  go to state 5
    double               go to state 6
    void                 go to state 7
    returnty             go to state 16
    body                 go to state 17
    local_decl_optional  go to state 18
    vardecl              go to state 19


State 16

   46 vardecl: returnty . ID ';'

    ID  shift, and go to state 20


State 17

    9 program: returnty ID '(' ')' '{' body . return_main '}'

    RETURN  shift, and go to state 21

    return_main  go to state 22


State 18

   10 body: local_decl_optional . stmt_list

    ID     shift, and go to state 23
    IF     shift, and go to state 24
    PRINT  shift, and go to state 25

    stmt_list          go to state 26
    print_stmt_list    go to state 27
    if_else_stmt_list  go to state 28
    assign_stmt_list   go to state 29
    assign_stmt        go to state 30
    id                 go to state 31


State 19

   44 local_decl_optional: vardecl . local_decl_optional
   45                    | vardecl .

    VOID     shift, and go to state 2
    DOUB     shift, and go to state 3
    INTEGER  shift, and go to state 4

    $default  reduce using rule 45 (local_decl_optional)

    int                  go to state 5
    double               go to state 6
    void                 go to state 7
    returnty             go to state 16
    local_decl_optional  go to state 32
    vardecl              go to state 19


State 20

   46 vardecl: returnty ID . ';'

    ';'  shift, and go to state 33


State 21

   30 return_main: RETURN . NUMBER ';'

    NUMBER  shift, and go to state 34


State 22

    9 program: returnty ID '(' ')' '{' body return_main . '}'

    '}'  shift, and go to state 35


State 23

   49 id: ID .

    $default  reduce using rule 49 (id)


State 24

   17 if_else_stmt_list: IF . '(' logical_expr ')' '{' stmt_list '}' ELSE '{' stmt_list '}'
   18                  | IF . '(' logical_expr ')' '{' stmt_list '}'

    '('  shift, and go to state 36


State 25

   16 print_stmt_list: PRINT . id ';'

    ID  shift, and go to state 23

    id  go to state 37


State 26

   10 body: local_decl_optional stmt_list .

    $default  reduce using rule 10 (body)


State 27

   12 stmt_list: print_stmt_list .
   15          | print_stmt_list . stmt_list

    ID     shift, and go to state 23
    IF     shift, and go to state 24
    PRINT  shift, and go to state 25

    $default  reduce using rule 12 (stmt_list)

    stmt_list          go to state 38
    print_stmt_list    go to state 27
    if_else_stmt_list  go to state 28
    assign_stmt_list   go to state 29
    assign_stmt        go to state 30
    id                 go to state 31


State 28

   13 stmt_list: if_else_stmt_list .

    $default  reduce using rule 13 (stmt_list)


State 29

   11 stmt_list: assign_stmt_list .
   14          | assign_stmt_list . stmt_list
   32 assign_stmt_list: assign_stmt_list . assign_stmt

    ID     shift, and go to state 23
    IF     shift, and go to state 24
    PRINT  shift, and go to state 25

    $default  reduce using rule 11 (stmt_list)

    stmt_list          go to state 39
    print_stmt_list    go to state 27
    if_else_stmt_list  go to state 28
    assign_stmt_list   go to state 29
    assign_stmt        go to state 40
    id                 go to state 31


State 30

   31 assign_stmt_list: assign_stmt .

    $default  reduce using rule 31 (assign_stmt_list)


State 31

   33 assign_stmt: id . '=' id ';'
   34            | id . '=' constant ';'
   35            | id . '=' expr ';'

    '='  shift, and go to state 41


State 32

   44 local_decl_optional: vardecl local_decl_optional .

    $default  reduce using rule 44 (local_decl_optional)


State 33

   46 vardecl: returnty ID ';' .

    $default  reduce using rule 46 (vardecl)


State 34

   30 return_main: RETURN NUMBER . ';'

    ';'  shift, and go to state 42


State 35

    9 program: returnty ID '(' ')' '{' body return_main '}' .

    $default  reduce using rule 9 (program)


State 36

   17 if_else_stmt_list: IF '(' . logical_expr ')' '{' stmt_list '}' ELSE '{' stmt_list '}'
   18                  | IF '(' . logical_expr ')' '{' stmt_list '}'

    NUMBER  shift, and go to state 43
    ID      shift, and go to state 23
    NNOT    shift, and go to state 44
    DOUB    shift, and go to state 45
    '+'     shift, and go to state 46
    '-'     shift, and go to state 47

    logical_expr  go to state 48
    relexpr       go to state 49
    expr          go to state 50
    constant      go to state 51
    id            go to state 52
    double_const  go to state 53
    digit         go to state 54
    int_const     go to state 55
    digits        go to state 56


State 37

   16 print_stmt_list: PRINT id . ';'

    ';'  shift, and go to state 57


State 38

   15 stmt_list: print_stmt_list stmt_list .

    $default  reduce using rule 15 (stmt_list)


State 39

   14 stmt_list: assign_stmt_list stmt_list .

    $default  reduce using rule 14 (stmt_list)


State 40

   31 assign_stmt_list: assign_stmt .
   32                 | assign_stmt_list assign_stmt .

    ID        reduce using rule 31 (assign_stmt_list)
    ID        [reduce using rule 32 (assign_stmt_list)]
    RETURN    reduce using rule 31 (assign_stmt_list)
    RETURN    [reduce using rule 32 (assign_stmt_list)]
    IF        reduce using rule 31 (assign_stmt_list)
    IF        [reduce using rule 32 (assign_stmt_list)]
    PRINT     reduce using rule 31 (assign_stmt_list)
    PRINT     [reduce using rule 32 (assign_stmt_list)]
    '}'       reduce using rule 31 (assign_stmt_list)
    '}'       [reduce using rule 32 (assign_stmt_list)]
    $default  reduce using rule 31 (assign_stmt_list)


State 41

   33 assign_stmt: id '=' . id ';'
   34            | id '=' . constant ';'
   35            | id '=' . expr ';'

    NUMBER  shift, and go to state 43
    ID      shift, and go to state 23
    DOUB    shift, and go to state 45
    '+'     shift, and go to state 46
    '-'     shift, and go to state 47

    expr          go to state 58
    constant      go to state 59
    id            go to state 60
    double_const  go to state 53
    digit         go to state 54
    int_const     go to state 55
    digits        go to state 56


State 42

   30 return_main: RETURN NUMBER ';' .

    $default  reduce using rule 30 (return_main)


State 43

   53 digit: NUMBER .

    $default  reduce using rule 53 (digit)


State 44

   21 logical_expr: NNOT . logical_expr

    NUMBER  shift, and go to state 43
    ID      shift, and go to state 23
    NNOT    shift, and go to state 44
    DOUB    shift, and go to state 45
    '+'     shift, and go to state 46
    '-'     shift, and go to state 47

    logical_expr  go to state 61
    relexpr       go to state 49
    expr          go to state 50
    constant      go to state 51
    id            go to state 52
    double_const  go to state 53
    digit         go to state 54
    int_const     go to state 55
    digits        go to state 56


State 45

   52 double_const: DOUB .

    $default  reduce using rule 52 (double_const)


State 46

   50 double_const: '+' . DOUB
   54 int_const: '+' . digits

    NUMBER  shift, and go to state 43
    DOUB    shift, and go to state 62

    digit   go to state 54
    digits  go to state 63


State 47

   51 double_const: '-' . DOUB
   55 int_const: '-' . digits

    NUMBER  shift, and go to state 43
    DOUB    shift, and go to state 64

    digit   go to state 54
    digits  go to state 65


State 48

   17 if_else_stmt_list: IF '(' logical_expr . ')' '{' stmt_list '}' ELSE '{' stmt_list '}'
   18                  | IF '(' logical_expr . ')' '{' stmt_list '}'
   19 logical_expr: logical_expr . AAND logical_expr
   20             | logical_expr . OOR logical_expr

    AAND  shift, and go to state 66
    OOR   shift, and go to state 67
    ')'   shift, and go to state 68


State 49

   22 logical_expr: relexpr .

    $default  reduce using rule 22 (logical_expr)


State 50

   23 relexpr: expr . relop expr
   36 expr: expr . arithop expr

    LE        shift, and go to state 69
    GE        shift, and go to state 70
    EQ        shift, and go to state 71
    NE        shift, and go to state 72
    GT        shift, and go to state 73
    LT        shift, and go to state 74
    SUBTRACT  shift, and go to state 75
    MUL       shift, and go to state 76
    DIVISION  shift, and go to state 77
    MODULUS   shift, and go to state 78
    ADDITION  shift, and go to state 79

    relop    go to state 80
    arithop  go to state 81


State 51

   38 expr: constant .

    $default  reduce using rule 38 (expr)


State 52

   37 expr: id .

    $default  reduce using rule 37 (expr)


State 53

   48 constant: double_const .

    $default  reduce using rule 48 (constant)


State 54

   57 digits: digit . digits
   58       | digit .

    NUMBER  shift, and go to state 43

    $default  reduce using rule 58 (digits)

    digit   go to state 54
    digits  go to state 82


State 55

   47 constant: int_const .

    $default  reduce using rule 47 (constant)


State 56

   56 int_const: digits .

    $default  reduce using rule 56 (int_const)


State 57

   16 print_stmt_list: PRINT id ';' .

    $default  reduce using rule 16 (print_stmt_list)


State 58

   35 assign_stmt: id '=' expr . ';'
   36 expr: expr . arithop expr

    SUBTRACT  shift, and go to state 75
    MUL       shift, and go to state 76
    DIVISION  shift, and go to state 77
    MODULUS   shift, and go to state 78
    ADDITION  shift, and go to state 79
    ';'       shift, and go to state 83

    arithop  go to state 81


State 59

   34 assign_stmt: id '=' constant . ';'
   38 expr: constant .

    ';'  shift, and go to state 84

    ';'       [reduce using rule 38 (expr)]
    $default  reduce using rule 38 (expr)


State 60

   33 assign_stmt: id '=' id . ';'
   37 expr: id .

    ';'  shift, and go to state 85

    ';'       [reduce using rule 37 (expr)]
    $default  reduce using rule 37 (expr)


State 61

   19 logical_expr: logical_expr . AAND logical_expr
   20             | logical_expr . OOR logical_expr
   21             | NNOT logical_expr .

    AAND  shift, and go to state 66
    OOR   shift, and go to state 67

    AAND      [reduce using rule 21 (logical_expr)]
    OOR       [reduce using rule 21 (logical_expr)]
    $default  reduce using rule 21 (logical_expr)


State 62

   50 double_const: '+' DOUB .

    $default  reduce using rule 50 (double_const)


State 63

   54 int_const: '+' digits .

    $default  reduce using rule 54 (int_const)


State 64

   51 double_const: '-' DOUB .

    $default  reduce using rule 51 (double_const)


State 65

   55 int_const: '-' digits .

    $default  reduce using rule 55 (int_const)


State 66

   19 logical_expr: logical_expr AAND . logical_expr

    NUMBER  shift, and go to state 43
    ID      shift, and go to state 23
    NNOT    shift, and go to state 44
    DOUB    shift, and go to state 45
    '+'     shift, and go to state 46
    '-'     shift, and go to state 47

    logical_expr  go to state 86
    relexpr       go to state 49
    expr          go to state 50
    constant      go to state 51
    id            go to state 52
    double_const  go to state 53
    digit         go to state 54
    int_const     go to state 55
    digits        go to state 56


State 67

   20 logical_expr: logical_expr OOR . logical_expr

    NUMBER  shift, and go to state 43
    ID      shift, and go to state 23
    NNOT    shift, and go to state 44
    DOUB    shift, and go to state 45
    '+'     shift, and go to state 46
    '-'     shift, and go to state 47

    logical_expr  go to state 87
    relexpr       go to state 49
    expr          go to state 50
    constant      go to state 51
    id            go to state 52
    double_const  go to state 53
    digit         go to state 54
    int_const     go to state 55
    digits        go to state 56


State 68

   17 if_else_stmt_list: IF '(' logical_expr ')' . '{' stmt_list '}' ELSE '{' stmt_list '}'
   18                  | IF '(' logical_expr ')' . '{' stmt_list '}'

    '{'  shift, and go to state 88


State 69

   26 relop: LE .

    $default  reduce using rule 26 (relop)


State 70

   27 relop: GE .

    $default  reduce using rule 27 (relop)


State 71

   29 relop: EQ .

    $default  reduce using rule 29 (relop)


State 72

   28 relop: NE .

    $default  reduce using rule 28 (relop)


State 73

   25 relop: GT .

    $default  reduce using rule 25 (relop)


State 74

   24 relop: LT .

    $default  reduce using rule 24 (relop)


State 75

   40 arithop: SUBTRACT .

    $default  reduce using rule 40 (arithop)


State 76

   41 arithop: MUL .

    $default  reduce using rule 41 (arithop)


State 77

   42 arithop: DIVISION .

    $default  reduce using rule 42 (arithop)


State 78

   43 arithop: MODULUS .

    $default  reduce using rule 43 (arithop)


State 79

   39 arithop: ADDITION .

    $default  reduce using rule 39 (arithop)


State 80

   23 relexpr: expr relop . expr

    NUMBER  shift, and go to state 43
    ID      shift, and go to state 23
    DOUB    shift, and go to state 45
    '+'     shift, and go to state 46
    '-'     shift, and go to state 47

    expr          go to state 89
    constant      go to state 51
    id            go to state 52
    double_const  go to state 53
    digit         go to state 54
    int_const     go to state 55
    digits        go to state 56


State 81

   36 expr: expr arithop . expr

    NUMBER  shift, and go to state 43
    ID      shift, and go to state 23
    DOUB    shift, and go to state 45
    '+'     shift, and go to state 46
    '-'     shift, and go to state 47

    expr          go to state 90
    constant      go to state 51
    id            go to state 52
    double_const  go to state 53
    digit         go to state 54
    int_const     go to state 55
    digits        go to state 56


State 82

   57 digits: digit digits .

    $default  reduce using rule 57 (digits)


State 83

   35 assign_stmt: id '=' expr ';' .

    $default  reduce using rule 35 (assign_stmt)


State 84

   34 assign_stmt: id '=' constant ';' .

    $default  reduce using rule 34 (assign_stmt)


State 85

   33 assign_stmt: id '=' id ';' .

    $default  reduce using rule 33 (assign_stmt)


State 86

   19 logical_expr: logical_expr . AAND logical_expr
   19             | logical_expr AAND logical_expr .
   20             | logical_expr . OOR logical_expr

    AAND  shift, and go to state 66
    OOR   shift, and go to state 67

    AAND      [reduce using rule 19 (logical_expr)]
    OOR       [reduce using rule 19 (logical_expr)]
    $default  reduce using rule 19 (logical_expr)


State 87

   19 logical_expr: logical_expr . AAND logical_expr
   20             | logical_expr . OOR logical_expr
   20             | logical_expr OOR logical_expr .

    AAND  shift, and go to state 66
    OOR   shift, and go to state 67

    AAND      [reduce using rule 20 (logical_expr)]
    OOR       [reduce using rule 20 (logical_expr)]
    $default  reduce using rule 20 (logical_expr)


State 88

   17 if_else_stmt_list: IF '(' logical_expr ')' '{' . stmt_list '}' ELSE '{' stmt_list '}'
   18                  | IF '(' logical_expr ')' '{' . stmt_list '}'

    ID     shift, and go to state 23
    IF     shift, and go to state 24
    PRINT  shift, and go to state 25

    stmt_list          go to state 91
    print_stmt_list    go to state 27
    if_else_stmt_list  go to state 28
    assign_stmt_list   go to state 29
    assign_stmt        go to state 30
    id                 go to state 31


State 89

   23 relexpr: expr relop expr .
   36 expr: expr . arithop expr

    SUBTRACT  shift, and go to state 75
    MUL       shift, and go to state 76
    DIVISION  shift, and go to state 77
    MODULUS   shift, and go to state 78
    ADDITION  shift, and go to state 79

    $default  reduce using rule 23 (relexpr)

    arithop  go to state 81


State 90

   36 expr: expr . arithop expr
   36     | expr arithop expr .

    SUBTRACT  shift, and go to state 75
    MUL       shift, and go to state 76
    DIVISION  shift, and go to state 77
    MODULUS   shift, and go to state 78
    ADDITION  shift, and go to state 79

    SUBTRACT  [reduce using rule 36 (expr)]
    MUL       [reduce using rule 36 (expr)]
    DIVISION  [reduce using rule 36 (expr)]
    MODULUS   [reduce using rule 36 (expr)]
    ADDITION  [reduce using rule 36 (expr)]
    $default  reduce using rule 36 (expr)

    arithop  go to state 81


State 91

   17 if_else_stmt_list: IF '(' logical_expr ')' '{' stmt_list . '}' ELSE '{' stmt_list '}'
   18                  | IF '(' logical_expr ')' '{' stmt_list . '}'

    '}'  shift, and go to state 92


State 92

   17 if_else_stmt_list: IF '(' logical_expr ')' '{' stmt_list '}' . ELSE '{' stmt_list '}'
   18                  | IF '(' logical_expr ')' '{' stmt_list '}' .

    ELSE  shift, and go to state 93

    $default  reduce using rule 18 (if_else_stmt_list)


State 93

   17 if_else_stmt_list: IF '(' logical_expr ')' '{' stmt_list '}' ELSE . '{' stmt_list '}'

    '{'  shift, and go to state 94


State 94

   17 if_else_stmt_list: IF '(' logical_expr ')' '{' stmt_list '}' ELSE '{' . stmt_list '}'

    ID     shift, and go to state 23
    IF     shift, and go to state 24
    PRINT  shift, and go to state 25

    stmt_list          go to state 95
    print_stmt_list    go to state 27
    if_else_stmt_list  go to state 28
    assign_stmt_list   go to state 29
    assign_stmt        go to state 30
    id                 go to state 31


State 95

   17 if_else_stmt_list: IF '(' logical_expr ')' '{' stmt_list '}' ELSE '{' stmt_list . '}'

    '}'  shift, and go to state 96


State 96

   17 if_else_stmt_list: IF '(' logical_expr ')' '{' stmt_list '}' ELSE '{' stmt_list '}' .

    $default  reduce using rule 17 (if_else_stmt_list)
